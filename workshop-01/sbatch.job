#!/usr/bin/env bash
#SBATCH --output=/dev/null
#SBATCH --error=/dev/null
#SBATCH --job-name=sapa_bootstats
# This is a SLURM job script for running the ipip_bootstats tutorial with
#	Apptainer. It is intended to be run on the Klone cluster at the University
#	of Washington.

# APPTAINER SETUP:
#	The parameters to apptainer are specified by environment variables.
#	The commands below will use the default values specified below unless
#	these environment variables are already set. (this is what the :- means)
#		APPTAINER_IMAGE_PATH:
#			The path to the apptainer image to use
APPTAINER_IMAGE_PATH="/gscratch/scrubbed/${USER}/hpc-workshop/workshop-01/workshop-01_latest.sif"

# SCRIPT SETUP:
# The parameters to the Python script cam be specified by environment variables.
# They must be exported so that they are visible to the Python script.
#	The commands below will use the default values specified below unless
#	these environment variables are already set. (this is what the :- means)
#		BOOT_INPUT_PATH:
# 			The path to the csv or csv.gz input file (required)
export BOOT_INPUT_PATH="${BOOT_INPUT_PATH:-../data/sapa_scored_subset.csv.gz}"
#		BOOT_N_ITER:
#			The number of bootstrap iterations to run
export BOOT_N_ITER="${BOOT_N_ITER:-100}"
#		BOOT_OUTPUT_DIR:
#			The directory to write the output to
export BOOT_OUTPUT_DIR="${BOOT_OUTPUT_DIR:-output/sapa_scored_subset_n${BOOT_N_ITER}}"

# Set the run script based on whether this is an array job or not:
if [[ -n "${SLURM_ARRAY_TASK_COUNT:-}" ]]; then
	RUN_SCRIPT="array-job.py"
else
	RUN_SCRIPT="single-job.py"
fi

# COMMANDS:
# Load the latest version of apptainer:
module load apptainer/local

# If the image doesn't exist, build it:
#   (--exclusive is used to ensure that the build process completes before the computations start)
#   (We use the --disable-cache option to avoid filling up your home directory)
if ! [[ -f "${APPTAINER_IMAGE_PATH:-}" ]]; then
	srun --exclusive apptainer build \
		--disable-cache \
		"${APPTAINER_IMAGE_PATH}" \
		Singularity
fi

# Append the /gscratch directory Apptainer's bind path so that we can access it:
export APPTAINER_BINDPATH="${APPTAINER_BINDPATH:+${APPTAINER_BINDPATH}:}/gscratch"

# Set the output file to be the job name with the array index (if applicable):
export SRUN_OUTPUT="${BOOT_OUTPUT_DIR}/${SLURM_JOB_NAME:-job}${SLURM_ARRAY_TASK_ID:+-${SLURM_ARRAY_TASK_ID}}.log"

# Run the script, passing along any arguments:
srun apptainer exec "${APPTAINER_IMAGE_PATH}" python "${RUN_SCRIPT}" "${@}"
