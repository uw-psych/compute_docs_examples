Bootstrap: docker # Where to get the base image from
From: python:{{ PY_VERSION }}-slim # Which container to use as a base image

# The %labels section specifies metadata for the container. In this case, we set
# only the version of the container.
%labels
	org.opencontainers.image.version 0.0.1

# The %arguments section allows you to specify variables at the time you build
# the container. For example:
# `apptainer build --arg PY_VERSION=3.11 my-container.sif Singularity`
# will replace every instance of {{ PY_VERSION } in this file with "3.11".
%arguments
	# The version of Python to use:
	PY_VERSION=3.12

# The %files section specifies files to copy into the container. 
%files
	# requirements.txt lists the Python packages to install:
	requirements.txt

# The %post section runs commands to install dependencies and set up the container.
%post
	set -x -e # Print commands and exit on errors.

	# Create a virtual environment in /opt/venv to install our dependencies:
	/usr/local/bin/python -m venv /opt/venv
	
	# Install requirements:
	/opt/venv/bin/pip install --no-cache-dir -r requirements.txt
	
	# Remove the requirements.txt file:
	rm requirements.txt
	
	# Print a message to stderr to let the user know that the installation is done:
	echo "$(/opt/venv/bin/python3 --version): Done installing dependencies." >&2


# The %environment section sets environment variables that will be available when
# the container is run. In this case, we set the virtual environment path and add
# it to the PATH, and we set an environment variable to prevent Python from writing
# .pyc files to disk.
%environment
	export VIRTUAL_ENV="/opt/venv"    # Set the virtual environment path.
	export PATH="/opt/venv/bin:$PATH" # Add the virtual environment to the PATH.
	export PYTHONDONTWRITEBYTECODE=1  # Don't write .pyc files to disk.
